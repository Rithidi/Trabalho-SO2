

participant Client
participant Message
participant Communicator
participant Protocol
participant NIC
participant Engine
participant NIC Física

NIC Física->Engine: recvfrom(buffer, size)
activate Engine
Engine->NIC: receive(frame, size)
activate NIC
NIC->NIC: Create buffer from frame
NIC->NIC: Extract protocol number
NIC->Protocol: notify(protocol_number, buffer)
activate Protocol
Protocol->Protocol: receive(buffer)
Protocol->Protocol: Extract payload
Protocol->Protocol: Extract source and destination addresses
Protocol->Protocol: Create Message object
Protocol->Communicator: notify(address, message)
activate Communicator
Communicator->Communicator: update(message)
Communicator->Communicator: sem_post()
Communicator->Client: Notify message is available
Client->Communicator: receive(message)
activate Communicator
Communicator->Communicator: updated()
Communicator->Communicator: sem_wait() // Wait for message availability
Communicator->Communicator: Retrieve message from _message_buffer
Communicator->Communicator: Return message
Communicator->Client: Deliver message
deactivate Communicator